name: NeutronDetector Arduino CI

on:
  push:
    paths:
      - 'neutronDetectorSA.ino'
      - 'neutronDetector.h'
      - 'neutronDetector.cpp'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'neutronDetectorSA.ino'
      - 'neutronDetector.h'
      - 'neutronDetector.cpp'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Arduino libraries
        uses: actions/cache@v3
        with:
          path: ~/Arduino/libraries
          key: ${{ runner.os }}-arduino-libs-${{ hashFiles('**/*.ino') }}

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v2
        with:
          additional-urls: http://arduino.esp8266.com/stable/package_esp8266com_index.json

      - name: Install ESP8266 core (NodeMCU)
        run: |
          arduino-cli core update-index
          arduino-cli core install esp8266:esp8266
          arduino-cli core list | grep esp8266

      - name: Install required libraries
        run: |
          arduino-cli lib install "ESP8266WiFi"
          arduino-cli lib install "ESP8266WebServer"
          arduino-cli lib install "ArduinoJson"
          arduino-cli lib install "Blynk"

      - name: List installed boards and libraries
        run: |
          arduino-cli board listall | grep -i nodemcu
          arduino-cli lib list

      - name: Compile for NodeMCU
        run: |
          arduino-cli compile --verbose \
            --fqbn esp8266:esp8266:nodemcuv2 \
            --libraries ~/Arduino/libraries \
            --export-binaries \
            neutronDetectorSA.ino

      - name: Generate ELF Analysis Report
        if: success()
        run: |
          mkdir -p elf-analysis
          for elf_file in $(find /home/runner/.cache/arduino/sketches/ -name '*.elf'); do
            base_name=$(basename "$elf_file" .elf)
            report_file="elf-analysis/${base_name}_report.md"
            echo "# ELF Analysis Report for ${base_name}.elf" > "$report_file"
            echo "" >> "$report_file"
            echo "## ELF Header" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -h "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
            echo "## Section Headers" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -S "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
          done

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arduino-build-artifacts
          path: |
            /home/runner/.cache/arduino/sketches/**/*.bin
            /home/runner/.cache/arduino/sketches/**/*.elf
            elf-analysis/*.md
          if-no-files-found: warn
