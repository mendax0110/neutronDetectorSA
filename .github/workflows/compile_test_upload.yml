name: NeutronDetector Arduino CI

on:
  push:
    paths:
      - 'neutronDetectorSA.ino'
      - 'neutronDetector.h'
      - 'neutronDetector.cpp'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'neutronDetectorSA.ino'
      - 'neutronDetector.h'
      - 'neutronDetector.cpp'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        run: |
          git clone https://github.com/${{ github.repository }}.git
          cd ${{ github.repository.split('/')[1] }}

      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Arduino CLI
        run: |
          arduino-cli config init
          arduino-cli config add board_manager.additional_urls http://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli config dump

      - name: Install ESP8266 core
        run: |
          arduino-cli core update-index
          arduino-cli core install esp8266:esp8266
          arduino-cli core list

      - name: Install required libraries
        run: |
          arduino-cli lib install "ESP8266WiFi"
          arduino-cli lib install "ESP8266WebServer"
          arduino-cli lib install "ArduinoJson"
          arduino-cli lib install "Blynk"
          arduino-cli lib list

      - name: Verify NodeMCU board
        run: |
          arduino-cli board listall | grep -i nodemcu

      - name: Compile sketch
        run: |
          arduino-cli compile --verbose \
            --fqbn esp8266:esp8266:nodemcuv2 \
            --libraries ~/Arduino/libraries \
            --export-binaries \
            neutronDetectorSA.ino

      - name: Analyze build artifacts
        run: |
          mkdir -p elf-analysis
          for elf_file in $(find /home/runner/.cache/arduino/sketches/ -name '*.elf'); do
            base_name=$(basename "$elf_file" .elf)
            report_file="elf-analysis/${base_name}_report.md"
            echo "# ELF Analysis Report for ${base_name}.elf" > "$report_file"
            echo "" >> "$report_file"
            echo "## ELF Header" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -h "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
            echo "## Section Headers" >> "$report_file"
            echo '```' >> "$report_file"
            readelf -S "$elf_file" >> "$report_file"
            echo '```' >> "$report_file"
          done

      - name: Upload artifacts
        run: |
          gh release upload $GITHUB_REF_NAME /home/runner/.cache/arduino/sketches/**/*.bin \
            /home/runner/.cache/arduino/sketches/**/*.elf \
            elf-analysis/*.md \
            --clobber
